plugin.tx_solr {
	search {
		sorting {
			options {
				# For the sort-By Box
				geosearch {
					field = geo_location
					label = Distance
				}

			}
		}
	}
}

page.includeCSS {
	file1 = EXT:solr/Resources/Css/PiResults/results.css
	file2 = EXT:solrgeo/Resources/Public/Stylesheets/search.css
}


plugin.tx_solrgeo {
	view {
		templateRootPath = {$plugin.tx_solrgeo.view.templateRootPath}
		partialRootPath = {$plugin.tx_solrgeo.view.partialRootPath}
		layoutRootPath = {$plugin.tx_solrgeo.view.layoutRootPath}
	}
	persistence {
		storagePid = {$plugin.tx_solrgeo.persistence.storagePid}
	}
	features {
		# uncomment the following line to enable the new Property Mapper.
		# rewrittenPropertyMapper = 1
	}

	index {
		# Supported adapters:
		# BuzzHttpAdapter, CurlHttpAdapter, GuzzleHttpAdapter, SocketHttpAdapter, ZendHttpAdapter
		# For using Buzz, Guzzle and Zend please ensure you have installed the respectively libraries
		adapter = CurlHttpAdapter

		# Optional parameters for supported providers:
		# GoogleMapsProvider: locale, region, useSsl
		# More information on https://github.com/geocoder-php/Geocoder
		provider {
			name = GoogleMapsProvider
			locale = de_DE
			region = Germany
			useSsl = 0
		}

		location {
			# Required fields are uid (pages) and city
			1 {
				uid = 3,51
				city = Frankfurt a.M.
				address = Kaiserstr. 73
				geolocation =
			}

			2 {
				uid = 2
				city = Berlin
				geolocation =  52.5234051, 13.4113999
			}

			3 {
				uid = 4
				city = Frankfurt
				address = Eckenheimer Landstr. 180
				geolocation =
			}
			4 {
				uid = 25
				city = Hanau
				geolocation =
            }
		}
	}

	search {
		targetPageId = 75

		query {
			filter {
				# valid filters: geofilt (The distance filter, exact search) or bbox (Bounding-box filter, less exact search)
				type = geofilt

				# default distance to search from given address in kilometers
				d = 100
			}

			sort {
				# asc, desc
				direction = asc
			}
		}

		faceting = 1
		faceting {
			distance {
				ranges {
					1 {
						value = 0-1
					}
					2 {
						value = 1-5
					}
					3 {
						value = 5-50
					}
				}
			}

			city {}

			country {}
		}
	}
}


#page.includeJS.solrgeo = EXT:solrgeo/Resources/Public/Javascript/Geocoding.js
# Include Google Maps API, external
#<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>